{"version":3,"sources":["assets/images/logo.svg","components/Shared/Header/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Input/index.js","containers/AddNewLink/index.js"],"names":["EmptyBar","styled","div","Container","Header","to","src","Logo","alt","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Input","input","section","AddNewLink","useState","name","setName","url","setURL","history","useHistory","Helmet","content","Consumer","links","setLinks","placeholder","value","onChange","e","target","Button","onClick","uniqueId","Date","now","toString","Math","random","substring","id","vote","date","push"],"mappings":"2KAAe,MAA0B,iC,OCMnCA,EAAWC,IAAOC,IAAV,oFAKRC,EAAYF,IAAOC,IAAV,0TA+BAE,IAbA,WACb,OACE,qCACE,cAACJ,EAAD,IACA,cAACG,EAAD,UACE,cAAC,IAAD,CAAME,GAAI,IAAV,SACE,qBAAKC,IAAKC,EAAMC,IAAI,+B,0FC/Bf,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,oHIkB/EC,EArBDpB,IAAOqB,MAAV,gb,eCQLnB,EAAYF,IAAOsB,QAAV,4MAUXF,GAmDWG,UA7CI,WAAO,IAAD,EACCC,mBAAS,IADV,mBAChBC,EADgB,KACVC,EADU,OAEDF,mBAAS,IAFR,mBAEhBG,EAFgB,KAEXC,EAFW,KAGjBC,EAAUC,cAEhB,OACE,qCACE,eAACC,EAAA,EAAD,WACE,iDAEA,sBAAMN,KAAK,cAAcO,QAAQ,+BAEnC,cAAC7B,EAAA,EAAD,IACA,cAAC,IAAY8B,SAAb,UACG,gBAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACC,eAACjC,EAAD,WACE,cAAC,EAAD,CAAOkC,YAAY,YAAYC,MAAOZ,EAAMa,SAAU,SAACC,GAAD,OAAOb,EAAQa,EAAEC,OAAOH,UAC9E,cAAC,EAAD,CAAOD,YAAY,WAAWC,MAAOV,EAAKW,SAAU,SAACC,GAAD,OAAOX,EAAOW,EAAEC,OAAOH,UACzE,cAACI,EAAA,EAAD,CACEC,QAAS,WACP,IAAIC,EAAWC,KAAKC,MAAMC,SAAS,IAAMC,KAAKC,SAASF,SAAS,IAAIG,UAAU,GAE9Ed,EAAS,CACP,CACEe,GAAIP,EACJhB,MACAF,OACA0B,KAAM,EACNC,KAAMR,KAAKC,QANP,mBAQHX,KAGLL,EAAQwB,KAAK,MAfjB","file":"static/js/4.79bd5a35.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.474c6e6d.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport {Link } from \"react-router-dom\";\n\nimport Logo from '../../../assets/images/logo.svg';\n\nconst EmptyBar = styled.div`\n  box-shadow: 0 1px 0 0 #eae8e4;\n  min-height: 2.5em;\n`;\n\nconst Container = styled.div`\n  min-height: 4.5em;\n  box-shadow: inset 0 -1px 0 0 #eae8e4;\n  align-items: center;\n  justify-content: space-between;\n  display: flex; \n  padding: 0 3.125vw;\n  \n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    \n    > a {\n      margin: 15px 0;\n    }\n  }  \n`;\n\nconst Header = () => {\n  return (\n    <>\n      <EmptyBar/>\n      <Container>\n        <Link to={'/'}>\n          <img src={Logo} alt=\"HepsiBurada brand\"/>\n        </Link>\n      </Container>\n    </>\n  );\n};\n\nexport default Header;\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components';\n\nconst Input = styled.input`\n  background-color: #f6f5f3;\n  border-radius: .375em;\n  padding: 0 1em;\n  background-clip: padding-box;\n  box-shadow: none;\n  border: none;\n  transition: border .3s cubic-bezier(.39,.575,.565,1);\n  color: var(--black);\n  font-size: 1em;\n  letter-spacing: .025em;\n  font-weight: 300;\n  line-height: 2.75em;\n  height: 2.75em;\n  flex: 1;\n  \n  &:disabled {\n    color: rgba(0,0,0, 0.4);\n  }\n`;\n\nexport default Input;\n","import React, {useState} from 'react';\nimport Helmet from \"react-helmet\";\nimport {useHistory} from 'react-router-dom';\nimport styled from \"styled-components\";\n\nimport Header from \"../../components/Shared/Header\";\nimport {LinkContext} from \"../../contexts/LinkProvider\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\n\nconst Container = styled.section`\n  padding: 4em;\n  max-width: 500px;\n  margin: auto;\n\n  hr {\n    margin: 20px 0;\n    border-width: 1px;\n  }\n  \n  ${Input} {\n    width: 100%;\n    margin-bottom: 15px;\n  }\n`;\n\nconst AddNewLink = () => {\n  const [name, setName] = useState('');\n  const [url, setURL] = useState('');\n  const history = useHistory();\n\n  return (\n    <>\n      <Helmet>\n        <title>Add new link</title>\n\n        <meta name=\"description\" content=\"AddNewLink Page bla bla\"/>\n      </Helmet>\n      <Header/>\n      <LinkContext.Consumer>\n        {({links, setLinks}) => (\n          <Container>\n            <Input placeholder='Link Name' value={name} onChange={(e) => setName(e.target.value)} />\n            <Input placeholder='Link URL' value={url} onChange={(e) => setURL(e.target.value)} />\n              <Button\n                onClick={() => {\n                  let uniqueId = Date.now().toString(36) + Math.random().toString(36).substring(2);\n\n                  setLinks([\n                    {\n                      id: uniqueId,\n                      url,\n                      name,\n                      vote: 0,\n                      date: Date.now(),\n                    },\n                    ...links,\n                  ]);\n\n                  history.push('/');\n                }}\n              >\n                Add Link\n              </Button>\n          </Container>\n        )}\n      </LinkContext.Consumer>\n    </>\n  );\n};\n\nexport default AddNewLink;\n"],"sourceRoot":""}